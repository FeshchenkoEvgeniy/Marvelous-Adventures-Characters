{"version":3,"file":"characters.js","sources":["../src/js/mainCharactersGetCategory.ts","../src/js/mainCharactersMarkup.ts"],"sourcesContent":["function getCategory() {\n    if (window.innerWidth <= 767) {\n        return { limit: 5, offset: 0, requiredCharacters: 5, currentCategory: 'mobile' };\n    } else if (window.innerWidth <= 1439) {\n        return { limit: 8, offset: 0, requiredCharacters: 8, currentCategory: 'tablet' };\n    } else {\n        return { limit: 16, offset: 0, requiredCharacters: 16, currentCategory: 'desktop' };\n    }\n}\n\nexport {getCategory}","import { fetchAllCharacters } from \"./api\";\nimport { debounce } from 'throttle-debounce';\nimport { ICharacters, IinitialState } from './interface'\nimport { getCategory } from \"./mainCharactersGetCategory\";\n\nconst charactersList = document.querySelector('.js-characters-list') as HTMLElement;\nconst loadMoreBtn = document.querySelector('.js-main-character__btn') as HTMLElement;\nconst loader = document.querySelector('.js-loader') as HTMLElement;\nconst body = document.querySelector('body') as HTMLElement\n\nconst { limit, offset, requiredCharacters, currentCategory } = getCategory();\n\nconst initialState: IinitialState = {\n    limit,\n    offset,\n    requiredCharacters,\n    currentCategory,\n}\nlet setLoading = true;\n\n    window.addEventListener('resize', debounce(1000, handleResize));\n    loadMoreBtn.addEventListener('click', loadMoreCharacters);\n    \n    filterValidateCharacters();\n    \n\nfunction handleResize() {\n    const newCategory = getCategory();\n\n    if (newCategory.currentCategory !== initialState.currentCategory) {\n        initialState.currentCategory = newCategory.currentCategory;\n        initialState.limit = newCategory.limit;\n        initialState.offset = 0; \n        initialState.requiredCharacters = newCategory.requiredCharacters;\n\n        charactersList.innerHTML = '';\n\n        filterValidateCharacters();\n    }\n}\n\nfunction showLoader() {\n    if (setLoading) {\n        loader.style.display = 'block';\n        body.style.pointerEvents = 'none'    \n    } else {\n        loader.style.display = 'none';\n        body.style.pointerEvents = 'all' \n    }\n}\n\nasync function filterValidateCharacters() {\n    let validCharacters: ICharacters[] = [];\n\n    loadMoreBtn.style.display = 'none'    \n   \n    setLoading = true\n    showLoader()\n\n    while (validCharacters.length < initialState.requiredCharacters) {\n        try {\n            const { data } = await fetchAllCharacters(initialState.offset, initialState.limit);\n\n            const filteredCharacters = data.results.filter(({ thumbnail: { path } }: ICharacters) => {\n                return !path.endsWith('image_not_available') && !path.endsWith('4c002e0305708');\n            });\n\n            validCharacters = [...validCharacters, ...filteredCharacters];\n\n            initialState.offset += initialState.limit;\n        } catch (err) {\n            console.log(\"Помилка під час запиту:\", err);\n            break;\n        }\n\n        if (validCharacters.length >= initialState.requiredCharacters) {\n            validCharacters = validCharacters.slice(0, initialState.requiredCharacters);\n            loadMoreBtn.style.display = 'block'\n            setLoading = false\n            showLoader()\n            break;\n        }\n    }\n\n    charactersList.insertAdjacentHTML('beforeend', createMarkup(validCharacters));\n}\n\n\nfunction loadMoreCharacters() {\n        if (initialState.offset >= 1500) {\n            loadMoreBtn.style.display = 'none'\n        }\n    filterValidateCharacters();\n}\n\nfunction createMarkup(arr: ICharacters[]): string {\n    return arr.map(({ name, resourceURI, thumbnail: { extension, path } }) => {\n        return `\n            <li class=\"characters__item\" data-url='${resourceURI}'>\n                <img src=\"${path}.${extension}\" alt=\"${name}\" class=\"characters__img\" />\n                <p class=\"characters__name\">${name}</p>\n            </li>\n        `;\n    }).join('');\n}\n\n"],"names":["getCategory","charactersList","loadMoreBtn","loader","body","limit","offset","requiredCharacters","currentCategory","initialState","setLoading","debounce","handleResize","loadMoreCharacters","filterValidateCharacters","newCategory","showLoader","validCharacters","data","fetchAllCharacters","filteredCharacters","path","err","createMarkup","arr","name","resourceURI","extension"],"mappings":"6FAAA,SAASA,GAAc,CACf,OAAA,OAAO,YAAc,IACd,CAAE,MAAO,EAAG,OAAQ,EAAG,mBAAoB,EAAG,gBAAiB,UAC/D,OAAO,YAAc,KACrB,CAAE,MAAO,EAAG,OAAQ,EAAG,mBAAoB,EAAG,gBAAiB,UAE/D,CAAE,MAAO,GAAI,OAAQ,EAAG,mBAAoB,GAAI,gBAAiB,UAEhF,CCHA,MAAMC,EAAiB,SAAS,cAAc,qBAAqB,EAC7DC,EAAc,SAAS,cAAc,yBAAyB,EAC9DC,EAAS,SAAS,cAAc,YAAY,EAC5CC,EAAO,SAAS,cAAc,MAAM,EAEpC,CAAE,MAAAC,EAAO,OAAAC,EAAQ,mBAAAC,EAAoB,gBAAAC,GAAoBR,EAAY,EAErES,EAA8B,CAChC,MAAAJ,EACA,OAAAC,EACA,mBAAAC,EACA,gBAAAC,CACJ,EACA,IAAIE,EAAa,GAEb,OAAO,iBAAiB,SAAUC,EAAS,IAAMC,CAAY,CAAC,EAC9DV,EAAY,iBAAiB,QAASW,CAAkB,EAExDC,IAGJ,SAASF,GAAe,CACpB,MAAMG,EAAcf,IAEhBe,EAAY,kBAAoBN,EAAa,kBAC7CA,EAAa,gBAAkBM,EAAY,gBAC3CN,EAAa,MAAQM,EAAY,MACjCN,EAAa,OAAS,EACtBA,EAAa,mBAAqBM,EAAY,mBAE9Cd,EAAe,UAAY,GAEFa,IAEjC,CAEA,SAASE,GAAa,CACdN,GACAP,EAAO,MAAM,QAAU,QACvBC,EAAK,MAAM,cAAgB,SAE3BD,EAAO,MAAM,QAAU,OACvBC,EAAK,MAAM,cAAgB,MAEnC,CAEA,eAAeU,GAA2B,CACtC,IAAIG,EAAiC,CAAA,EAO9B,IALPf,EAAY,MAAM,QAAU,OAEfQ,EAAA,GACFM,IAEJC,EAAgB,OAASR,EAAa,oBAAoB,CACzD,GAAA,CACM,KAAA,CAAE,KAAAS,CAAS,EAAA,MAAMC,EAAmBV,EAAa,OAAQA,EAAa,KAAK,EAE3EW,EAAqBF,EAAK,QAAQ,OAAO,CAAC,CAAE,UAAW,CAAE,KAAAG,CAAK,KACzD,CAACA,EAAK,SAAS,qBAAqB,GAAK,CAACA,EAAK,SAAS,eAAe,CACjF,EAEDJ,EAAkB,CAAC,GAAGA,EAAiB,GAAGG,CAAkB,EAE5DX,EAAa,QAAUA,EAAa,YAC/Ba,EAAK,CACF,QAAA,IAAI,0BAA2BA,CAAG,EAC1C,KACJ,CAEI,GAAAL,EAAgB,QAAUR,EAAa,mBAAoB,CAC3DQ,EAAkBA,EAAgB,MAAM,EAAGR,EAAa,kBAAkB,EAC1EP,EAAY,MAAM,QAAU,QACfQ,EAAA,GACFM,IACX,KACJ,CACJ,CAEAf,EAAe,mBAAmB,YAAasB,EAAaN,CAAe,CAAC,CAChF,CAGA,SAASJ,GAAqB,CAClBJ,EAAa,QAAU,OACvBP,EAAY,MAAM,QAAU,QAEXY,GAC7B,CAEA,SAASS,EAAaC,EAA4B,CACvC,OAAAA,EAAI,IAAI,CAAC,CAAE,KAAAC,EAAM,YAAAC,EAAa,UAAW,CAAE,UAAAC,EAAW,KAAAN,CAAK,KACvD;AAAA,qDACsCK,CAAW;AAAA,4BACpCL,CAAI,IAAIM,CAAS,UAAUF,CAAI;AAAA,8CACbA,CAAI;AAAA;AAAA,SAG7C,EAAE,KAAK,EAAE,CACd"}